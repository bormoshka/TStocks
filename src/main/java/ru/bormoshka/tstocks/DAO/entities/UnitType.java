package ru.bormoshka.tstocks.DAO.entities;
// Generated Nov 21, 2013 2:12:48 AM by Hibernate Tools 3.6.0

import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OrderBy;
import javax.persistence.Table;
import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * UnitType generated by hbm2java
 */
@Entity
@Table(name = "UnitType")
public class UnitType extends AbstractEntity implements java.io.Serializable {

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	private Long unitTypeId;

	@Column(name = "name", length = 120)
	private String name;

	@Column(name = "description", columnDefinition="TEXT")
	private String description;

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "category_id", nullable = false, referencedColumnName = "id")
	private Category category;
	
	@Column(name = "is_composite", nullable = false)
	private Boolean isComposite;

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "unitType")
	private Set<Unit> units = new HashSet<Unit>(0);

	@ManyToMany(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch = FetchType.LAZY)
	@JoinTable(name = "UnitType_has_Property",
			joinColumns = @JoinColumn(name = "unitType_id"),
			inverseJoinColumns = @JoinColumn(name = "property_id"))
	@OrderBy(value = "name")
	private Set<Property> properties = new HashSet<Property>(0);
	
	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY)
	@Fetch(FetchMode.JOIN)
	@JoinColumn(name = "parent_id")
	private Set<UnitTypeConnection> connectedUnitTypes;

	public UnitType() {
	}

	public UnitType(Category category) {
		this.category = category;
	}

	public UnitType(String name, String description, Category category) {
		this.name = name;
		this.description = description;
		this.category = category;
	}

	public Long getUnitTypeId() {
		return this.unitTypeId;
	}

	public void setUnitTypeId(Long id) {
		this.unitTypeId = id;
	}

	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public Category getCategory() {
		return category;
	}

	public void setCategory(Category category) {
		this.category = category;
	}

	public Set<Unit> getUnits() {
		return units;
	}

	public void setUnits(Set<Unit> units) {
		this.units = units;
	}

	public Set<Property> getProperties() {
		return properties;
	}

	public void setProperties(Set<Property> properties) {
		this.properties = properties;
	}

	@Override
	public void setId(Long id) {
		this.unitTypeId = id;
	}

	public Set<UnitTypeConnection> getConnectedUnitTypes() {
		return connectedUnitTypes;
	}

	public void setConnectedUnitTypes(Set<UnitTypeConnection> connectedUnitTypes) {
		this.connectedUnitTypes = connectedUnitTypes;
	}
	
}
